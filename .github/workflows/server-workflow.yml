name: Server workflow

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  QT5: 5.15.2
  QT6: 6.1.1

jobs:
  generator:
    runs-on: ubuntu-latest
    outputs:
      job-matrix: ${{ steps.set-matrix.outputs.job-matrix }}
    steps:
      - id: set-matrix
        run: echo "::set-output name=job-matrix::{\"os\":[\"ubuntu\",\"windows\",\"macos\"],\"qt\":[\"${{ env.QT5 }}\",\"${{ env.QT6 }}\"]}"

  qt-cache:
    needs: [generator]
    runs-on: ${{ format('{0}-latest', matrix.os) }}
    strategy:
      matrix: ${{fromJSON(needs.generator.outputs.job-matrix)}}
    steps:
    - name: Cache Qt
      id: cache-qt
      uses: actions/cache@v1
      with:
        path: ../Qt
        key: ${{ matrix.os }}-QtCache-${{ matrix.qt }}

    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        aqtversion: ==2.0.0
        # modules: ${{ matrix.qt == env.QT6 && 'qtwebsockets' || '' }} # to be enabled with QT6.2
        version: '${{ matrix.qt }}'
        cached: ${{ steps.cache-qt.outputs.cache-hit }}
  
  vcpkg-cache:
    needs: [generator]
    runs-on: ${{ format('{0}-latest', matrix.os) }}
    strategy:
      matrix: ${{fromJSON(needs.generator.outputs.job-matrix)}}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
          submodules: 'recursive'

      - name: Get vcpkg package list and cache key
        run: |
          echo "::set-output name=dependencies::$(python3 ${{ github.workspace }}/scripts/vcpkgPackages.py qt${{ matrix.qt }} ${{ matrix.os }})"
          echo "::set-output name=cacheKey::$(python3 ${{ github.workspace }}/scripts/vcpkgCacheKey.py qt${{ matrix.qt }} ${{ matrix.os }})"
        id: vcpkgPackages
        env:
          PYTHONPATH: ./QtPiDeckCommon/scripts/

      - name: Get triplet
        id: triplet-step
        shell: bash
        run: |
          triplet=$(python -c '{"macos":"osx", "ubuntu":"linux", "windows":"windows"}["${{ matrix.os }}"]')
          echo "::set-output name=triplet::${triplet}"

      - uses: lukka/run-vcpkg@v7.3
        with:
          vcpkgDirectory: ${{ github.workspace }}/QtPiDeckCommon/ext/vcpkg
          appendedCacheKey: ${{ steps.vcpkgPackages.outputs.cacheKey }}
          vcpkgTriplet: ${{ steps.triplet-step.output.triplet }}
          vcpkgArguments: ${{ steps.vcpkgPackages.outputs.dependencies }}
          doNotUpdateVcpkg: true
        if: steps.vcpkgPackages.outputs.dependencies != 'nil'

  test:
    needs: [generator, qt-cache, vcpkg-cache]
    runs-on: ${{ format('{0}-latest', matrix.os) }}
    strategy:
      matrix: ${{fromJSON(needs.generator.outputs.job-matrix)}}
    steps:
      - run: echo 'Hello ${{ matrix.os }} with Qt ${{ matrix.qt }}'

  clang-tidy:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - run: echo "clang-tidy"

  code-coverage:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - run: echo "code-coverage"