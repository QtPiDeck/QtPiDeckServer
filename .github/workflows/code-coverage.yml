name: Code coverage

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ${{ matrix.cfg.os }}
    env:
      VULKAN_VER: 1.2.162
      VULKAN_VER_FULL: 1.2.162.0
    strategy:
      matrix:
        cfg:
        - { os: ubuntu-20.04, qt: 5.15.2, cc: gcc-10, cxx: g++-10, experimental: false, vcpkgtriplet: x64-linux }
        - { os: ubuntu-20.04, qt: 6.2.0, cc: gcc-10, cxx: g++-10, experimental: true, vcpkgtriplet: x64-linux }

    name: code coverage [Qt${{ matrix.cfg.qt }}]
    continue-on-error: ${{ matrix.cfg.experimental }}

    steps:
      - name: Cache Qt
        id: cache-qt
        uses: actions/cache@v1
        with:
          path: ../Qt
          key: ${{ runner.os }}-QtCache-${{ matrix.cfg.qt }}

      - uses: actions/checkout@v2

      - name: Checkout submodules
        run: |
          git config --global url."https://github.com/".insteadOf "git@github.com:"
          git submodule sync --recursive
          git submodule update --init --force --recursive --depth=1

      - uses: lukka/get-cmake@latest

      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          modules: qtwebsockets
          version: '${{ matrix.cfg.qt }}'
          cached: ${{ steps.cache-qt.outputs.cache-hit }}

      - name: Make build dir
        run: mkdir build

      - name: Install additional Qt6 dependencies(ubuntu)
        run: |
          wget -qO - https://packages.lunarg.com/lunarg-signing-key-pub.asc | sudo apt-key add -
          sudo wget -qO /etc/apt/sources.list.d/lunarg-vulkan-${VULKAN_VER}-focal.list https://packages.lunarg.com/vulkan/${VULKAN_VER}/lunarg-vulkan-${VULKAN_VER}-focal.list
          sudo apt update
          sudo apt install
          sudo apt install vulkan-sdk libxkbcommon-dev -y
        if: matrix.cfg.qt == '6.2.0'

      - name: Get vcpkg package list and cache key
        run: |
          echo "::set-output name=dependencies::$(python3 ${{ github.workspace }}/scripts/vcpkgPackages.py qt${{ matrix.cfg.qt }} ${{ matrix.cfg.os }})"
          echo "::set-output name=cacheKey::$(python3 ${{ github.workspace }}/scripts/vcpkgCacheKey.py qt${{ matrix.cfg.qt }} ${{ matrix.cfg.os }})"
        id: vcpkgPackages
        env:
          PYTHONPATH: ./QtPiDeckCommon/scripts/

      - uses: lukka/run-vcpkg@v7.3
        with:
          vcpkgDirectory: ${{ github.workspace }}/QtPiDeckCommon/ext/vcpkg
          appendedCacheKey: ${{ steps.vcpkgPackages.outputs.cacheKey }}
          vcpkgTriplet: ${{ matrix.cfg.vcpkgtriplet }}
          vcpkgArguments: ${{ steps.vcpkgPackages.outputs.dependencies }}
          doNotUpdateVcpkg: true
        if: steps.vcpkgPackages.outputs.dependencies != 'nil'

      - name: Run cmake
        run: cmake .. -G Ninja -DBUILD_COMMON_TESTS=OFF -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/QtPiDeckCommon/ext/vcpkg/scripts/buildsystems/vcpkg.cmake -DCODECOV=ON -DCMAKE_BUILD_TYPE=Debug
        working-directory: build
        env:
          CC: ${{ matrix.cfg.cc }}
          CXX: ${{ matrix.cfg.cxx }}

      - name: Build project
        run: ninja
        working-directory: build

      - name: Install lcov
        run: sudo apt update && sudo apt install -y lcov

      - name: Initial lcov run
        run: lcov --rc lcov_branch_coverage=1 --no-external --capture --initial --directory . --output-file before.txt

      - name: Test project
        run: ctest --output-on-failure
        working-directory: build
        env:
          LD_LIBRARY_PATH: ./QtPiDeckCommon/QtPiDeckCommon

      - name: Post-test lcov run
        run: lcov --rc lcov_branch_coverage=1 --capture --directory . --output-file coverage.txt

      - name: Merge lcov reports
        run: |
            lcov --rc lcov_branch_coverage=1 --add-tracefile before.txt --add-tracefile coverage.txt --output-file coverage.txt
            rm before.txt

      - name: Clean up report
        run: lcov --rc lcov_branch_coverage=1 --remove coverage.txt -o coverage.txt '/usr/*' '*/Tests/*' '*/build/*' '*boost*' '*QtPiDeckCommon*'

      - uses: codecov/codecov-action@v1
        with:
          functionalities: "fix" 
